services:

  postgres:
    image: postgres:16
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_DB: sndb
      POSTGRES_USER: snuser
      POSTGRES_PASSWORD: tesT123s4n
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U snuser -d sndb" ]
      interval: 10s
      timeout: 5s
      retries: 5


  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"  # broker port
      - "15672:15672" # management UI
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - backend

  sn-user:
    build:
      context: sn-user # Refers to the directory containing your Dockerfile
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_started
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/sndb
      SPRING_DATASOURCE_USERNAME: snuser
      SPRING_DATASOURCE_PASSWORD: tesT123s4n
    networks:
      - backend

  keycloak:
    image: quay.io/keycloak/keycloak:26.0.0
    command: start-dev
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    volumes:
      - keycloak_data:/opt/keycloak/data
    networks:
      - backend


volumes:
  postgres_data:
  keycloak_data:
  rabbitmq_data:

networks:
  backend:
    driver: bridge